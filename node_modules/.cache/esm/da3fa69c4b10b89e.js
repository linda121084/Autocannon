let autocannon,report,API_URL,RUN_SPEC,HEADERS_OPTS,LOGIN_FUNCS,auth,lesson,instructor,classScheduling,trainingCalendar,trainingRecord,exemptionUtility,certificate,certificateCategory;_4b1‍.w("autocannon",[["default",["autocannon"],function(v){autocannon=v}]]);_4b1‍.w("../_utils",[["report",["report"],function(v){report=v}]]);_4b1‍.w("./_env",[["API_URL",["API_URL"],function(v){API_URL=v}],["RUN_SPEC",["RUN_SPEC"],function(v){RUN_SPEC=v}],["HEADERS_OPTS",["HEADERS_OPTS"],function(v){HEADERS_OPTS=v}],["LOGIN_FUNCS",["LOGIN_FUNCS"],function(v){LOGIN_FUNCS=v}]]);_4b1‍.w("./auth",[["default",["auth"],function(v){auth=v}]]);_4b1‍.w("./lesson",[["default",["lesson"],function(v){lesson=v}]]);_4b1‍.w("./instructor",[["default",["instructor"],function(v){instructor=v}]]);_4b1‍.w("./class-scheduling",[["default",["classScheduling"],function(v){classScheduling=v}]]);_4b1‍.w("./training-calendar",[["default",["trainingCalendar"],function(v){trainingCalendar=v}]]);_4b1‍.w("./training-record",[["default",["trainingRecord"],function(v){trainingRecord=v}]]);_4b1‍.w("./exemption-utility",[["default",["exemptionUtility"],function(v){exemptionUtility=v}]]);_4b1‍.w("./certificate",[["default",["certificate"],function(v){certificate=v}]]);_4b1‍.w("./certificate-category",[["default",["certificateCategory"],function(v){certificateCategory=v}]]);
















(async () => {
  const token = await LOGIN_FUNCS.Admin();

  await autocannon(
    {
      ...RUN_SPEC,
      title: 'training',
      url: API_URL,
      headers: { ...HEADERS_OPTS, token },
      requests: [
        // ...auth,

        // ...lesson,
        ...instructor,
        ...classScheduling,
        ...trainingCalendar,
        ...trainingRecord,
        ...exemptionUtility,

        ...certificate,
        ...certificateCategory,
      ],
    },
    report,
  );
})();
